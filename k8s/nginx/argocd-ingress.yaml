apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: argocd-ingress
  annotations:
    # kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # kubernetes.io/ingress.allow-http: "true"  
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    kubernetes.io/ingress.class: nginx-ingress-internal
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
      }    
    cert-manager.io/cluster-issuer: letsencrypt-nginx-prod
spec:
  # rules:
  # - host: argocd.k8s-tanzu-ak.com
  #   http:
  #     paths:
  #     - backend:
  #         serviceName: argocd
  #         servicePort: 80
  # backend:
  #   serviceName: argocd
  #   servicePort: 80
  # rules:
  # - host: argocd.k8s-tanzu-ak.com
  #   http:
  #     paths:
  #     - path: /
  #       backend:
  #         serviceName: argocd-server
  #         servicePort: 80  
  rules:
  - host: argocd.k8s-tanzu-ak.com
    http:    
      paths:
      - backend:
          serviceName: argocd-server
          servicePort: 80
        path: /
  tls:
    - hosts:
      - argocd.k8s-tanzu-ak.com
      secretName: argocd-cert-manager-ctls